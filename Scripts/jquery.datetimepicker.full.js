!function (a) { "function" === typeof define && define.amd ? define(["jquery", "jquery-mousewheel", "date-functions"], a) : "object" === typeof exports ? module.exports = a : a(jQuery) }(function (a) {
    "use strict"; function e(a, b, c) { this.date = a, this.desc = b, this.style = c } var b = { i18n: { ar: { months: ["\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0634\u0628\u0627\u0637", "\u0622\u0630\u0627\u0631", "\u0646\u064a\u0633\u0627\u0646", "\u0645\u0627\u064a\u0648", "\u062d\u0632\u064a\u0631\u0627\u0646", "\u062a\u0645\u0648\u0632", "\u0622\u0628", "\u0623\u064a\u0644\u0648\u0644", "\u062a\u0634\u0631\u064a\u0646 \u0627\u0644\u0623\u0648\u0644", "\u062a\u0634\u0631\u064a\u0646 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u0623\u0648\u0644"], dayOfWeekShort: ["\u0646", "\u062b", "\u0639", "\u062e", "\u062c", "\u0633", "\u062d"], dayOfWeek: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a", "\u0627\u0644\u0623\u062d\u062f"] }, ro: { months: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"], dayOfWeekShort: ["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\xe2"], dayOfWeek: ["Duminic\u0103", "Luni", "Mar\u0163i", "Miercuri", "Joi", "Vineri", "S\xe2mb\u0103t\u0103"] }, id: { months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dayOfWeekShort: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], dayOfWeek: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"] }, is: { months: ["Jan\xfaar", "Febr\xfaar", "Mars", "Apr\xedl", "Ma\xed", "J\xfan\xed", "J\xfal\xed", "\xc1g\xfast", "September", "Okt\xf3ber", "N\xf3vember", "Desember"], dayOfWeekShort: ["Sun", "M\xe1n", "\xderi\xf0", "Mi\xf0", "Fim", "F\xf6s", "Lau"], dayOfWeek: ["Sunnudagur", "M\xe1nudagur", "\xderi\xf0judagur", "Mi\xf0vikudagur", "Fimmtudagur", "F\xf6studagur", "Laugardagur"] }, bg: { months: ["\u042f\u043d\u0443\u0430\u0440\u0438", "\u0424\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440\u0438\u043b", "\u041c\u0430\u0439", "\u042e\u043d\u0438", "\u042e\u043b\u0438", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u041e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u041d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0414\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], dayOfWeekShort: ["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], dayOfWeek: ["\u041d\u0435\u0434\u0435\u043b\u044f", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u044f\u0434\u0430", "\u0427\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u041f\u0435\u0442\u044a\u043a", "\u0421\u044a\u0431\u043e\u0442\u0430"] }, fa: { months: ["\u0641\u0631\u0648\u0631\u062f\u06cc\u0646", "\u0627\u0631\u062f\u06cc\u0628\u0647\u0634\u062a", "\u062e\u0631\u062f\u0627\u062f", "\u062a\u06cc\u0631", "\u0645\u0631\u062f\u0627\u062f", "\u0634\u0647\u0631\u06cc\u0648\u0631", "\u0645\u0647\u0631", "\u0622\u0628\u0627\u0646", "\u0622\u0630\u0631", "\u062f\u06cc", "\u0628\u0647\u0645\u0646", "\u0627\u0633\u0641\u0646\u062f"], dayOfWeekShort: ["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647 \u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], dayOfWeek: ["\u06cc\u06a9\u200c\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u200c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647", "\u06cc\u06a9\u200c\u0634\u0646\u0628\u0647"] }, ru: { months: ["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], dayOfWeekShort: ["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], dayOfWeek: ["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"] }, uk: { months: ["\u0421\u0456\u0447\u0435\u043d\u044c", "\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], dayOfWeekShort: ["\u041d\u0434\u043b", "\u041f\u043d\u0434", "\u0412\u0442\u0440", "\u0421\u0440\u0434", "\u0427\u0442\u0432", "\u041f\u0442\u043d", "\u0421\u0431\u0442"], dayOfWeek: ["\u041d\u0435\u0434\u0456\u043b\u044f", "\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f'\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"] }, en: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, el: { months: ["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], dayOfWeekShort: ["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03b9", "\u03a4\u03b5\u03c4", "\u03a0\u03b5\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03b1\u03b2"], dayOfWeek: ["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"] }, de: { months: ["Januar", "Februar", "M\xe4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dayOfWeekShort: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], dayOfWeek: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"] }, nl: { months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], dayOfWeekShort: ["zo", "ma", "di", "wo", "do", "vr", "za"], dayOfWeek: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"] }, tr: { months: ["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\xfcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], dayOfWeekShort: ["Paz", "Pts", "Sal", "\xc7ar", "Per", "Cum", "Cts"], dayOfWeek: ["Pazar", "Pazartesi", "Sal\u0131", "\xc7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"] }, fr: { months: ["Janvier", "F\xe9vrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Ao\xfbt", "Septembre", "Octobre", "Novembre", "D\xe9cembre"], dayOfWeekShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"], dayOfWeek: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"] }, es: { months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mi\xe9", "Jue", "Vie", "S\xe1b"], dayOfWeek: ["Domingo", "Lunes", "Martes", "Mi\xe9rcoles", "Jueves", "Viernes", "S\xe1bado"] }, th: { months: ["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], dayOfWeekShort: ["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], dayOfWeek: ["\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e1e\u0e38\u0e18", "\u0e1e\u0e24\u0e2b\u0e31\u0e2a", "\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e40\u0e2a\u0e32\u0e23\u0e4c", "\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c"] }, pl: { months: ["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", "wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], dayOfWeekShort: ["nd", "pn", "wt", "\u015br", "cz", "pt", "sb"], dayOfWeek: ["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"] }, pt: { months: ["Janeiro", "Fevereiro", "Mar\xe7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"], dayOfWeek: ["Domingo", "Segunda", "Ter\xe7a", "Quarta", "Quinta", "Sexta", "S\xe1bado"] }, ch: { months: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], dayOfWeekShort: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"] }, se: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xf6n", "M\xe5n", "Tis", "Ons", "Tor", "Fre", "L\xf6r"] }, kr: { months: ["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], dayOfWeekShort: ["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], dayOfWeek: ["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"] }, it: { months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"], dayOfWeek: ["Domenica", "Luned\xec", "Marted\xec", "Mercoled\xec", "Gioved\xec", "Venerd\xec", "Sabato"] }, da: { months: ["January", "Februar", "Marts", "April", "Maj", "Juni", "July", "August", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xf8n", "Man", "Tir", "Ons", "Tor", "Fre", "L\xf8r"], dayOfWeek: ["s\xf8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\xf8rdag"] }, no: { months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"], dayOfWeekShort: ["S\xf8n", "Man", "Tir", "Ons", "Tor", "Fre", "L\xf8r"], dayOfWeek: ["S\xf8ndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "L\xf8rdag"] }, ja: { months: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], dayOfWeekShort: ["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], dayOfWeek: ["\u65e5\u66dc", "\u6708\u66dc", "\u706b\u66dc", "\u6c34\u66dc", "\u6728\u66dc", "\u91d1\u66dc", "\u571f\u66dc"] }, vi: { months: ["Th\xe1ng 1", "Th\xe1ng 2", "Th\xe1ng 3", "Th\xe1ng 4", "Th\xe1ng 5", "Th\xe1ng 6", "Th\xe1ng 7", "Th\xe1ng 8", "Th\xe1ng 9", "Th\xe1ng 10", "Th\xe1ng 11", "Th\xe1ng 12"], dayOfWeekShort: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"], dayOfWeek: ["Ch\u1ee7 nh\u1eadt", "Th\u1ee9 hai", "Th\u1ee9 ba", "Th\u1ee9 t\u01b0", "Th\u1ee9 n\u0103m", "Th\u1ee9 s\xe1u", "Th\u1ee9 b\u1ea3y"] }, sl: { months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"], dayOfWeekShort: ["Ned", "Pon", "Tor", "Sre", "\u010cet", "Pet", "Sob"], dayOfWeek: ["Nedelja", "Ponedeljek", "Torek", "Sreda", "\u010cetrtek", "Petek", "Sobota"] }, cs: { months: ["Leden", "\xdanor", "B\u0159ezen", "Duben", "Kv\u011bten", "\u010cerven", "\u010cervenec", "Srpen", "Z\xe1\u0159\xed", "\u0158\xedjen", "Listopad", "Prosinec"], dayOfWeekShort: ["Ne", "Po", "\xdat", "St", "\u010ct", "P\xe1", "So"] }, hu: { months: ["Janu\xe1r", "Febru\xe1r", "M\xe1rcius", "\xc1prilis", "M\xe1jus", "J\xfanius", "J\xfalius", "Augusztus", "Szeptember", "Okt\xf3ber", "November", "December"], dayOfWeekShort: ["Va", "H\xe9", "Ke", "Sze", "Cs", "P\xe9", "Szo"], dayOfWeek: ["vas\xe1rnap", "h\xe9tf\u0151", "kedd", "szerda", "cs\xfct\xf6rt\xf6k", "p\xe9ntek", "szombat"] }, az: { months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dayOfWeekShort: ["B", "Be", "\xc7a", "\xc7", "Ca", "C", "\u015e"], dayOfWeek: ["Bazar", "Bazar ert\u0259si", "\xc7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\xc7\u0259r\u015f\u0259nb\u0259", "C\xfcm\u0259 ax\u015fam\u0131", "C\xfcm\u0259", "\u015e\u0259nb\u0259"] }, bs: { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "\u010cet", "Pet", "Sub"], dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "\u010cetvrtak", "Petak", "Subota"] }, ca: { months: ["Gener", "Febrer", "Mar\xe7", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], dayOfWeekShort: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"], dayOfWeek: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"] }, "en-GB": { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, et: { months: ["Jaanuar", "Veebruar", "M\xe4rts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"], dayOfWeekShort: ["P", "E", "T", "K", "N", "R", "L"], dayOfWeek: ["P\xfchap\xe4ev", "Esmasp\xe4ev", "Teisip\xe4ev", "Kolmap\xe4ev", "Neljap\xe4ev", "Reede", "Laup\xe4ev"] }, eu: { months: ["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"], dayOfWeekShort: ["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."], dayOfWeek: ["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"] }, fi: { months: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kes\xe4kuu", "Hein\xe4kuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"], dayOfWeekShort: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"], dayOfWeek: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"] }, gl: { months: ["Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"], dayOfWeek: ["Domingo", "Luns", "Martes", "M\xe9rcores", "Xoves", "Venres", "S\xe1bado"] }, hr: { months: ["Sije\u010danj", "Velja\u010da", "O\u017eujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "\u010cet", "Pet", "Sub"], dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "\u010cetvrtak", "Petak", "Subota"] }, ko: { months: ["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], dayOfWeekShort: ["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], dayOfWeek: ["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"] }, lt: { months: ["Sausio", "Vasario", "Kovo", "Baland\u017eio", "Gegu\u017e\u0117s", "Bir\u017eelio", "Liepos", "Rugpj\u016b\u010dio", "Rugs\u0117jo", "Spalio", "Lapkri\u010dio", "Gruod\u017eio"], dayOfWeekShort: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "\u0160e\u0161"], dayOfWeek: ["Sekmadienis", "Pirmadienis", "Antradienis", "Tre\u010diadienis", "Ketvirtadienis", "Penktadienis", "\u0160e\u0161tadienis"] }, lv: { months: ["Janv\u0101ris", "Febru\u0101ris", "Marts", "Apr\u012blis ", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], dayOfWeekShort: ["Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"], dayOfWeek: ["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"] }, mk: { months: ["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], dayOfWeekShort: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0432\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0430\u0431"], dayOfWeek: ["\u041d\u0435\u0434\u0435\u043b\u0430", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u041f\u0435\u0442\u043e\u043a", "\u0421\u0430\u0431\u043e\u0442\u0430"] }, mn: { months: ["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], dayOfWeekShort: ["\u0414\u0430\u0432", "\u041c\u044f\u0433", "\u041b\u0445\u0430", "\u041f\u04af\u0440", "\u0411\u0441\u043d", "\u0411\u044f\u043c", "\u041d\u044f\u043c"], dayOfWeek: ["\u0414\u0430\u0432\u0430\u0430", "\u041c\u044f\u0433\u043c\u0430\u0440", "\u041b\u0445\u0430\u0433\u0432\u0430", "\u041f\u04af\u0440\u044d\u0432", "\u0411\u0430\u0430\u0441\u0430\u043d", "\u0411\u044f\u043c\u0431\u0430", "\u041d\u044f\u043c"] }, "pt-BR": { months: ["Janeiro", "Fevereiro", "Mar\xe7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "S\xe1b"], dayOfWeek: ["Domingo", "Segunda", "Ter\xe7a", "Quarta", "Quinta", "Sexta", "S\xe1bado"] }, sk: { months: ["Janu\xe1r", "Febru\xe1r", "Marec", "Apr\xedl", "M\xe1j", "J\xfan", "J\xfal", "August", "September", "Okt\xf3ber", "November", "December"], dayOfWeekShort: ["Ne", "Po", "Ut", "St", "\u0160t", "Pi", "So"], dayOfWeek: ["Nede\u013ea", "Pondelok", "Utorok", "Streda", "\u0160tvrtok", "Piatok", "Sobota"] }, sq: { months: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "N\xebntor", "Dhjetor"], dayOfWeekShort: ["Die", "H\xebn", "Mar", "M\xebr", "Enj", "Pre", "Shtu"], dayOfWeek: ["E Diel", "E H\xebn\xeb", "E Mart\u0113", "E M\xebrkur\xeb", "E Enjte", "E Premte", "E Shtun\xeb"] }, "sr-YU": { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeekShort: ["Ned", "Pon", "Uto", "Sre", "\u010det", "Pet", "Sub"], dayOfWeek: ["Nedelja", "Ponedeljak", "Utorak", "Sreda", "\u010cetvrtak", "Petak", "Subota"] }, sr: { months: ["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], dayOfWeekShort: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], dayOfWeek: ["\u041d\u0435\u0434\u0435\u0459\u0430", "\u041f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0423\u0442\u043e\u0440\u0430\u043a", "\u0421\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u041f\u0435\u0442\u0430\u043a", "\u0421\u0443\u0431\u043e\u0442\u0430"] }, sv: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeekShort: ["S\xf6n", "M\xe5n", "Tis", "Ons", "Tor", "Fre", "L\xf6r"], dayOfWeek: ["S\xf6ndag", "M\xe5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\xf6rdag"] }, "zh-TW": { months: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], dayOfWeekShort: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], dayOfWeek: ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"] }, zh: { months: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], dayOfWeekShort: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], dayOfWeek: ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"] }, he: { months: ["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], dayOfWeekShort: ["\u05d0'", "\u05d1'", "\u05d2'", "\u05d3'", "\u05d4'", "\u05d5'", "\u05e9\u05d1\u05ea"], dayOfWeek: ["\u05e8\u05d0\u05e9\u05d5\u05df", "\u05e9\u05e0\u05d9", "\u05e9\u05dc\u05d9\u05e9\u05d9", "\u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d7\u05de\u05d9\u05e9\u05d9", "\u05e9\u05d9\u05e9\u05d9", "\u05e9\u05d1\u05ea", "\u05e8\u05d0\u05e9\u05d5\u05df"] }, hy: { months: ["\u0540\u0578\u0582\u0576\u057e\u0561\u0580", "\u0553\u0565\u057f\u0580\u057e\u0561\u0580", "\u0544\u0561\u0580\u057f", "\u0531\u057a\u0580\u056b\u056c", "\u0544\u0561\u0575\u056b\u057d", "\u0540\u0578\u0582\u0576\u056b\u057d", "\u0540\u0578\u0582\u056c\u056b\u057d", "\u0555\u0563\u0578\u057d\u057f\u0578\u057d", "\u054d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0540\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0546\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0534\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], dayOfWeekShort: ["\u053f\u056b", "\u0535\u0580\u056f", "\u0535\u0580\u0584", "\u0549\u0578\u0580", "\u0540\u0576\u0563", "\u0548\u0582\u0580\u0562", "\u0547\u0562\u0569"], dayOfWeek: ["\u053f\u056b\u0580\u0561\u056f\u056b", "\u0535\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0535\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0549\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0540\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0548\u0582\u0580\u0562\u0561\u0569", "\u0547\u0561\u0562\u0561\u0569"] }, kg: { months: ["\u04ae\u0447\u0442\u04af\u043d \u0430\u0439\u044b", "\u0411\u0438\u0440\u0434\u0438\u043d \u0430\u0439\u044b", "\u0416\u0430\u043b\u0433\u0430\u043d \u041a\u0443\u0440\u0430\u043d", "\u0427\u044b\u043d \u041a\u0443\u0440\u0430\u043d", "\u0411\u0443\u0433\u0443", "\u041a\u0443\u043b\u0436\u0430", "\u0422\u0435\u043a\u0435", "\u0411\u0430\u0448 \u041e\u043e\u043d\u0430", "\u0410\u044f\u043a \u041e\u043e\u043d\u0430", "\u0422\u043e\u0433\u0443\u0437\u0434\u0443\u043d \u0430\u0439\u044b", "\u0416\u0435\u0442\u0438\u043d\u0438\u043d \u0430\u0439\u044b", "\u0411\u0435\u0448\u0442\u0438\u043d \u0430\u0439\u044b"], dayOfWeekShort: ["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u0435"], dayOfWeek: ["\u0416\u0435\u043a\u0448\u0435\u043c\u0431", "\u0414\u04af\u0439\u0448\u04e9\u043c\u0431", "\u0428\u0435\u0439\u0448\u0435\u043c\u0431", "\u0428\u0430\u0440\u0448\u0435\u043c\u0431", "\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0416\u0443\u043c\u0430", "\u0418\u0448\u0435\u043d\u0431"] } }, value: "", rtl: !1, format: "Y/m/d H:i", formatTime: "H:i", formatDate: "Y/m/d", startDate: !1, step: 60, monthChangeSpinner: !0, closeOnDateSelect: !1, closeOnTimeSelect: !0, closeOnWithoutClick: !0, closeOnInputClick: !0, timepicker: !0, datepicker: !0, weeks: !1, defaultTime: !1, defaultDate: !1, minDate: !1, maxDate: !1, minTime: !1, maxTime: !1, disabledMinTime: !1, disabledMaxTime: !1, allowTimes: [], opened: !1, initTime: !0, inline: !1, theme: "", onSelectDate: function () { }, onSelectTime: function () { }, onChangeMonth: function () { }, onChangeYear: function () { }, onChangeDateTime: function () { }, onShow: function () { }, onClose: function () { }, onGenerate: function () { }, withoutCopyright: !0, inverseButton: !1, hours12: !1, next: "xdsoft_next", prev: "xdsoft_prev", dayOfWeekStart: 0, parentID: "body", timeHeightInTimePicker: 25, timepickerScrollbar: !0, todayButton: !0, prevButton: !0, nextButton: !0, defaultSelect: !0, scrollMonth: !0, scrollTime: !0, scrollInput: !0, lazyInit: !1, mask: !1, validateOnBlur: !0, allowBlank: !0, yearStart: 1950, yearEnd: 2050, monthStart: 0, monthEnd: 11, style: "", id: "", fixed: !1, roundTime: "round", className: "", weekends: [], highlightedDates: [], highlightedPeriods: [], disabledDates: [], disabledWeekDays: [], yearOffset: 0, beforeShowDay: null, enterLikeTab: !0, showApplyButton: !1 }, c = "en", d = "en"; a.datetimepicker = { setLocale: function (a) { d = b.i18n[a] ? a : c, Date.monthNames = b.i18n[d].months, Date.dayNames = b.i18n[d].dayOfWeek } }, window.getComputedStyle || (window.getComputedStyle = function (a) { return this.el = a, this.getPropertyValue = function (b) { var c = /(\-([a-z]){1})/g; return "float" === b && (b = "styleFloat"), c.test(b) && (b = b.replace(c, function (a, b, c) { return c.toUpperCase() })), a.currentStyle[b] || null }, this }), Array.prototype.indexOf || (Array.prototype.indexOf = function (a, b) { var c, d; for (c = b || 0, d = this.length; c < d; c += 1) if (this[c] === a) return c; return -1 }), Date.prototype.countDaysInMonth = function () { return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate() }, a.fn.xdsoftScroller = function (b) { return this.each(function () { var f, g, h, i, j, c = a(this), d = function (a) { var c, b = { x: 0, y: 0 }; return "touchstart" === a.type || "touchmove" === a.type || "touchend" === a.type || "touchcancel" === a.type ? (c = a.originalEvent.touches[0] || a.originalEvent.changedTouches[0], b.x = c.clientX, b.y = c.clientY) : ("mousedown" === a.type || "mouseup" === a.type || "mousemove" === a.type || "mouseover" === a.type || "mouseout" === a.type || "mouseenter" === a.type || "mouseleave" === a.type) && (b.x = a.clientX, b.y = a.clientY), b }, k = 100, l = !1, m = 0, n = 0, o = 0, p = !1, q = 0, r = function () { }; return "hide" === b ? void c.find(".xdsoft_scrollbar").hide() : (a(this).hasClass("xdsoft_scroller_box") || (f = c.children().eq(0), g = c[0].clientHeight, h = f[0].offsetHeight, i = a('<div class="xdsoft_scrollbar"></div>'), j = a('<div class="xdsoft_scroller"></div>'), i.append(j), c.addClass("xdsoft_scroller_box").append(i), r = function (a) { var b = d(a).y - m + q; b < 0 && (b = 0), b + j[0].offsetHeight > o && (b = o - j[0].offsetHeight), c.trigger("scroll_element.xdsoft_scroller", [k ? b / k : 0]) }, j.on("touchstart.xdsoft_scroller mousedown.xdsoft_scroller", function (e) { g || c.trigger("resize_scroll.xdsoft_scroller", [b]), m = d(e).y, q = parseInt(j.css("margin-top"), 10), o = i[0].offsetHeight, "mousedown" === e.type ? (document && a(document.body).addClass("xdsoft_noselect"), a([document.body, window]).on("mouseup.xdsoft_scroller", function f() { a([document.body, window]).off("mouseup.xdsoft_scroller", f).off("mousemove.xdsoft_scroller", r).removeClass("xdsoft_noselect") }), a(document.body).on("mousemove.xdsoft_scroller", r)) : (p = !0, e.stopPropagation(), e.preventDefault()) }).on("touchmove", function (a) { p && (a.preventDefault(), r(a)) }).on("touchend touchcancel", function () { p = !1, q = 0 }), c.on("scroll_element.xdsoft_scroller", function (a, b) { g || c.trigger("resize_scroll.xdsoft_scroller", [b, !0]), b = b > 1 ? 1 : b < 0 || isNaN(b) ? 0 : b, j.css("margin-top", k * b), setTimeout(function () { f.css("marginTop", -parseInt((f[0].offsetHeight - g) * b, 10)) }, 10) }).on("resize_scroll.xdsoft_scroller", function (a, b, d) { var e, l; g = c[0].clientHeight, h = f[0].offsetHeight, e = g / h, l = e * i[0].offsetHeight, e > 1 ? j.hide() : (j.show(), j.css("height", parseInt(l > 10 ? l : 10, 10)), k = i[0].offsetHeight - j[0].offsetHeight, d !== !0 && c.trigger("scroll_element.xdsoft_scroller", [b || Math.abs(parseInt(f.css("marginTop"), 10)) / (h - g)])) }), c.on("mousewheel", function (a) { var b = Math.abs(parseInt(f.css("marginTop"), 10)); return b -= 20 * a.deltaY, b < 0 && (b = 0), c.trigger("scroll_element.xdsoft_scroller", [b / (h - g)]), a.stopPropagation(), !1 }), c.on("touchstart", function (a) { l = d(a), n = Math.abs(parseInt(f.css("marginTop"), 10)) }), c.on("touchmove", function (a) { if (l) { a.preventDefault(); var b = d(a); c.trigger("scroll_element.xdsoft_scroller", [(n - (b.y - l.y)) / (h - g)]) } }), c.on("touchend touchcancel", function () { l = !1, n = 0 })), void c.trigger("resize_scroll.xdsoft_scroller", [b])) }) }, a.fn.datetimepicker = function (c) {
        var C, D, f = 48, g = 57, h = 96, i = 105, j = 17, k = 46, l = 13, m = 27, n = 8, o = 37, p = 38, q = 39, r = 40, s = 9, t = 116, u = 65, v = 67, w = 86, x = 90, y = 89, z = !1, A = a.isPlainObject(c) || !c ? a.extend(!0, {}, b, c) : a.extend(!0, {}, b), B = 0, E = function (a) { a.on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function b() { a.is(":disabled") || a.data("xdsoft_datetimepicker") || (clearTimeout(B), B = setTimeout(function () { a.data("xdsoft_datetimepicker") || C(a), a.off("open.xdsoft focusin.xdsoft mousedown.xdsoft", b).trigger("open.xdsoft") }, 100)) }) }; return C = function (b) {
            function V() { var c, a = !1; return A.startDate ? a = U.strToDate(A.startDate) : (a = A.value || (b && b.val && b.val() ? b.val() : ""), a ? a = U.strToDateTime(a) : A.defaultDate && (a = U.strToDateTime(A.defaultDate), A.defaultTime && (c = U.strtotime(A.defaultTime), a.setHours(c.getHours()), a.setMinutes(c.getMinutes())))), a && U.isValidDate(a) ? B.data("changed", !0) : a = "", a || 0 } var N, O, P, Q, R, U, B = a('<div class="xdsoft_datetimepicker xdsoft_noselect"></div>'), C = a('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'), D = a('<div class="xdsoft_datepicker active"></div>'), E = a('<div class="xdsoft_mounthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'), F = a('<div class="xdsoft_calendar"></div>'), G = a('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'), H = G.find(".xdsoft_time_box").eq(0), I = a('<div class="xdsoft_time_variant"></div>'), J = a('<button type="button" class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'), K = a('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'), L = a('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'), M = !1, S = 0, T = 0; A.id && B.attr("id", A.id), A.style && B.attr("style", A.style), A.weeks && B.addClass("xdsoft_showweeks"), A.rtl && B.addClass("xdsoft_rtl"), B.addClass("xdsoft_" + A.theme), B.addClass(A.className), E.find(".xdsoft_month span").after(K), E.find(".xdsoft_year span").after(L), E.find(".xdsoft_month,.xdsoft_year").on("mousedown.xdsoft", function (b) {
                var g, h, c = a(this).find(".xdsoft_select").eq(0), d = 0, e = 0, f = c.is(":visible");
                for (E.find(".xdsoft_select").hide(), U.currentTime && (d = U.currentTime[a(this).hasClass("xdsoft_month") ? "getMonth" : "getFullYear"]()), c[f ? "hide" : "show"](), g = c.find("div.xdsoft_option"), h = 0; h < g.length && g.eq(h).data("value") !== d; h += 1) e += g[0].offsetHeight; return c.xdsoftScroller(e / (c.children()[0].offsetHeight - c[0].clientHeight)), b.stopPropagation(), !1
            }), E.find(".xdsoft_select").xdsoftScroller().on("mousedown.xdsoft", function (a) { a.stopPropagation(), a.preventDefault() }).on("mousedown.xdsoft", ".xdsoft_option", function () { (void 0 === U.currentTime || null === U.currentTime) && (U.currentTime = U.now()); var c = U.currentTime.getFullYear(); U && U.currentTime && U.currentTime[a(this).parent().parent().hasClass("xdsoft_monthselect") ? "setMonth" : "setFullYear"](a(this).data("value")), a(this).parent().parent().hide(), B.trigger("xchange.xdsoft"), A.onChangeMonth && a.isFunction(A.onChangeMonth) && A.onChangeMonth.call(B, U.currentTime, B.data("input")), c !== U.currentTime.getFullYear() && a.isFunction(A.onChangeYear) && A.onChangeYear.call(B, U.currentTime, B.data("input")) }), B.setOptions = function (c) { var d = {}, C = function (a) { try { if (document.selection && document.selection.createRange) { var b = document.selection.createRange(); return b.getBookmark().charCodeAt(2) - 2 } if (a.setSelectionRange) return a.selectionStart } catch (c) { return 0 } }, F = function (a, b) { if (a = "string" === typeof a || a instanceof String ? document.getElementById(a) : a, !a) return !1; if (a.createTextRange) { var c = a.createTextRange(); return c.collapse(!0), c.moveEnd("character", b), c.moveStart("character", b), c.select(), !0 } return a.setSelectionRange ? (a.setSelectionRange(b, b), !0) : !1 }, I = function (a, b) { var c = a.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1").replace(/_/g, "{digit+}").replace(/([0-9]{1})/g, "{digit$1}").replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}").replace(/\{digit[\+]\}/g, "[0-9_]{1}"); return new RegExp(c).test(b) }; A = a.extend(!0, {}, A, c), c.allowTimes && a.isArray(c.allowTimes) && c.allowTimes.length && (A.allowTimes = a.extend(!0, [], c.allowTimes)), c.weekends && a.isArray(c.weekends) && c.weekends.length && (A.weekends = a.extend(!0, [], c.weekends)), c.highlightedDates && a.isArray(c.highlightedDates) && c.highlightedDates.length && (a.each(c.highlightedDates, function (b, c) { var g, f = a.map(c.split(","), a.trim), h = new e(Date.parseDate(f[0], A.formatDate), f[1], f[2]), i = h.date.dateFormat(A.formatDate); void 0 !== d[i] ? (g = d[i].desc, g && g.length && h.desc && h.desc.length && (d[i].desc = g + "\n" + h.desc)) : d[i] = h }), A.highlightedDates = a.extend(!0, [], d)), c.highlightedPeriods && a.isArray(c.highlightedPeriods) && c.highlightedPeriods.length && (d = a.extend(!0, [], A.highlightedDates), a.each(c.highlightedPeriods, function (b, c) { var f, g, h, i, j, k, l; if (a.isArray(c)) f = c[0], g = c[1], h = c[2], l = c[3]; else { var m = a.map(c.split(","), a.trim); f = Date.parseDate(m[0], A.formatDate), g = Date.parseDate(m[1], A.formatDate), h = m[2], l = m[3] } for (; f <= g;) i = new e(f, h, l), j = f.dateFormat(A.formatDate), f.setDate(f.getDate() + 1), void 0 !== d[j] ? (k = d[j].desc, k && k.length && i.desc && i.desc.length && (d[j].desc = k + "\n" + i.desc)) : d[j] = i }), A.highlightedDates = a.extend(!0, [], d)), c.disabledDates && a.isArray(c.disabledDates) && c.disabledDates.length && (A.disabledDates = a.extend(!0, [], c.disabledDates)), c.disabledWeekDays && a.isArray(c.disabledWeekDays) && c.disabledWeekDays.length && (A.disabledWeekDays = a.extend(!0, [], c.disabledWeekDays)), !A.open && !A.opened || A.inline || b.trigger("open.xdsoft"), A.inline && (M = !0, B.addClass("xdsoft_inline"), b.after(B).hide()), A.inverseButton && (A.next = "xdsoft_prev", A.prev = "xdsoft_next"), A.datepicker ? D.addClass("active") : D.removeClass("active"), A.timepicker ? G.addClass("active") : G.removeClass("active"), A.value && (U.setCurrentTime(A.value), b && b.val && b.val(U.str)), A.dayOfWeekStart = isNaN(A.dayOfWeekStart) ? 0 : parseInt(A.dayOfWeekStart, 10) % 7, A.timepickerScrollbar || H.xdsoftScroller("hide"), A.minDate && /^[\+\-](.*)$/.test(A.minDate) && (A.minDate = U.strToDateTime(A.minDate).dateFormat(A.formatDate)), A.maxDate && /^[\+\-](.*)$/.test(A.maxDate) && (A.maxDate = U.strToDateTime(A.maxDate).dateFormat(A.formatDate)), J.toggle(A.showApplyButton), E.find(".xdsoft_today_button").css("visibility", A.todayButton ? "visible" : "hidden"), E.find("." + A.prev).css("visibility", A.prevButton ? "visible" : "hidden"), E.find("." + A.next).css("visibility", A.nextButton ? "visible" : "hidden"), A.mask && (b.off("keydown.xdsoft"), A.mask === !0 && (A.mask = A.format.replace(/Y/g, "9999").replace(/F/g, "9999").replace(/m/g, "19").replace(/d/g, "39").replace(/H/g, "29").replace(/i/g, "59").replace(/s/g, "59")), "string" === a.type(A.mask) && (I(A.mask, b.val()) || b.val(A.mask.replace(/[0-9]/g, "_")), b.on("keydown.xdsoft", function (c) { var B, D, d = this.value, e = c.which; if (e >= f && e <= g || e >= h && e <= i || e === n || e === k) { for (B = C(this), D = e !== n && e !== k ? String.fromCharCode(h <= e && e <= i ? e - f : e) : "_", e !== n && e !== k || !B || (B -= 1, D = "_") ; /[^0-9_]/.test(A.mask.substr(B, 1)) && B < A.mask.length && B > 0;) B += e === n || e === k ? -1 : 1; if (d = d.substr(0, B) + D + d.substr(B + 1), "" === a.trim(d)) d = A.mask.replace(/[0-9]/g, "_"); else if (B === A.mask.length) return c.preventDefault(), !1; for (B += e === n || e === k ? 0 : 1; /[^0-9_]/.test(A.mask.substr(B, 1)) && B < A.mask.length && B > 0;) B += e === n || e === k ? -1 : 1; I(A.mask, d) ? (this.value = d, F(this, B)) : "" === a.trim(d) ? this.value = A.mask.replace(/[0-9]/g, "_") : b.trigger("error_input.xdsoft") } else if (-1 !== [u, v, w, x, y].indexOf(e) && z || -1 !== [m, p, r, o, q, t, j, s, l].indexOf(e)) return !0; return c.preventDefault(), !1 }))), A.validateOnBlur && b.off("blur.xdsoft").on("blur.xdsoft", function () { if (A.allowBlank && !a.trim(a(this).val()).length) a(this).val(null), B.data("xdsoft_datetime").empty(); else if (Date.parseDate(a(this).val(), A.format)) B.data("xdsoft_datetime").setCurrentTime(a(this).val()); else { var b = +[a(this).val()[0], a(this).val()[1]].join(""), c = +[a(this).val()[2], a(this).val()[3]].join(""); a(this).val(!A.datepicker && A.timepicker && b >= 0 && b < 24 && c >= 0 && c < 60 ? [b, c].map(function (a) { return a > 9 ? a : "0" + a }).join(":") : U.now().dateFormat(A.format)), B.data("xdsoft_datetime").setCurrentTime(a(this).val()) } B.trigger("changedatetime.xdsoft") }), A.dayOfWeekStartPrev = 0 === A.dayOfWeekStart ? 6 : A.dayOfWeekStart - 1, B.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft") }, B.data("options", A).on("mousedown.xdsoft", function (a) { return a.stopPropagation(), a.preventDefault(), L.hide(), K.hide(), !1 }), H.append(I), H.xdsoftScroller(), B.on("afterOpen.xdsoft", function () { H.xdsoftScroller() }), B.append(D).append(G), A.withoutCopyright !== !0 && B.append(C), D.append(E).append(F).append(J), a(A.parentID).append(B), N = function () { var b = this; b.now = function (a) { var d, e, c = new Date; return !a && A.defaultDate && (d = b.strToDateTime(A.defaultDate), c.setFullYear(d.getFullYear()), c.setMonth(d.getMonth()), c.setDate(d.getDate())), A.yearOffset && c.setFullYear(c.getFullYear() + A.yearOffset), !a && A.defaultTime && (e = b.strtotime(A.defaultTime), c.setHours(e.getHours()), c.setMinutes(e.getMinutes())), c }, b.isValidDate = function (a) { return "[object Date]" !== Object.prototype.toString.call(a) ? !1 : !isNaN(a.getTime()) }, b.setCurrentTime = function (a) { b.currentTime = "string" === typeof a ? b.strToDateTime(a) : b.isValidDate(a) ? a : b.now(), B.trigger("xchange.xdsoft") }, b.empty = function () { b.currentTime = null }, b.getCurrentTime = function () { return b.currentTime }, b.nextMonth = function () { (void 0 === b.currentTime || null === b.currentTime) && (b.currentTime = b.now()); var d, c = b.currentTime.getMonth() + 1; return 12 === c && (b.currentTime.setFullYear(b.currentTime.getFullYear() + 1), c = 0), d = b.currentTime.getFullYear(), b.currentTime.setDate(Math.min(new Date(b.currentTime.getFullYear(), c + 1, 0).getDate(), b.currentTime.getDate())), b.currentTime.setMonth(c), A.onChangeMonth && a.isFunction(A.onChangeMonth) && A.onChangeMonth.call(B, U.currentTime, B.data("input")), d !== b.currentTime.getFullYear() && a.isFunction(A.onChangeYear) && A.onChangeYear.call(B, U.currentTime, B.data("input")), B.trigger("xchange.xdsoft"), c }, b.prevMonth = function () { (void 0 === b.currentTime || null === b.currentTime) && (b.currentTime = b.now()); var c = b.currentTime.getMonth() - 1; return -1 === c && (b.currentTime.setFullYear(b.currentTime.getFullYear() - 1), c = 11), b.currentTime.setDate(Math.min(new Date(b.currentTime.getFullYear(), c + 1, 0).getDate(), b.currentTime.getDate())), b.currentTime.setMonth(c), A.onChangeMonth && a.isFunction(A.onChangeMonth) && A.onChangeMonth.call(B, U.currentTime, B.data("input")), B.trigger("xchange.xdsoft"), c }, b.getWeekOfYear = function (a) { var b = new Date(a.getFullYear(), 0, 1); return Math.ceil(((a - b) / 864e5 + b.getDay() + 1) / 7) }, b.strToDateTime = function (a) { var d, e, c = []; return a && a instanceof Date && b.isValidDate(a) ? a : (c = /^(\+|\-)(.*)$/.exec(a), c && (c[2] = Date.parseDate(c[2], A.formatDate)), c && c[2] ? (d = c[2].getTime() - 6e4 * c[2].getTimezoneOffset(), e = new Date(b.now(!0).getTime() + parseInt(c[1] + "1", 10) * d)) : e = a ? Date.parseDate(a, A.format) : b.now(), b.isValidDate(e) || (e = b.now()), e) }, b.strToDate = function (a) { if (a && a instanceof Date && b.isValidDate(a)) return a; var c = a ? Date.parseDate(a, A.formatDate) : b.now(!0); return b.isValidDate(c) || (c = b.now(!0)), c }, b.strtotime = function (a) { if (a && a instanceof Date && b.isValidDate(a)) return a; var c = a ? Date.parseDate(a, A.formatTime) : b.now(!0); return b.isValidDate(c) || (c = b.now(!0)), c }, b.str = function () { return b.currentTime.dateFormat(A.format) }, b.currentTime = this.now() }, U = new N, J.on("click", function (a) { a.preventDefault(), B.data("changed", !0), U.setCurrentTime(V()), b.val(U.str()), B.trigger("close.xdsoft") }), E.find(".xdsoft_today_button").on("mousedown.xdsoft", function () { B.data("changed", !0), U.setCurrentTime(0), B.trigger("afterOpen.xdsoft") }).on("dblclick.xdsoft", function () { var c, d, a = U.getCurrentTime(); a = new Date(a.getFullYear(), a.getMonth(), a.getDate()), c = U.strToDate(A.minDate), c = new Date(c.getFullYear(), c.getMonth(), c.getDate()), a < c || (d = U.strToDate(A.maxDate), d = new Date(d.getFullYear(), d.getMonth(), d.getDate()), a > d || (b.val(U.str()), b.trigger("change"), B.trigger("close.xdsoft"))) }), E.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var b = a(this), c = 0, d = !1; !function e(a) { b.hasClass(A.next) ? U.nextMonth() : b.hasClass(A.prev) && U.prevMonth(), A.monthChangeSpinner && (d || (c = setTimeout(e, a || 100))) }(500), a([document.body, window]).on("mouseup.xdsoft", function f() { clearTimeout(c), d = !0, a([document.body, window]).off("mouseup.xdsoft", f) }) }), G.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var b = a(this), c = 0, d = !1, e = 110; !function f(a) { var g = H[0].clientHeight, h = I[0].offsetHeight, i = Math.abs(parseInt(I.css("marginTop"), 10)); b.hasClass(A.next) && h - g - A.timeHeightInTimePicker >= i ? I.css("marginTop", "-" + (i + A.timeHeightInTimePicker) + "px") : b.hasClass(A.prev) && i - A.timeHeightInTimePicker >= 0 && I.css("marginTop", "-" + (i - A.timeHeightInTimePicker) + "px"), H.trigger("scroll_element.xdsoft_scroller", [Math.abs(parseInt(I.css("marginTop"), 10) / (h - g))]), e = e > 10 ? 10 : e - 10, d || (c = setTimeout(f, a || e)) }(500), a([document.body, window]).on("mouseup.xdsoft", function g() { clearTimeout(c), d = !0, a([document.body, window]).off("mouseup.xdsoft", g) }) }), O = 0, B.on("xchange.xdsoft", function (b) { clearTimeout(O), O = setTimeout(function () { (void 0 === U.currentTime || null === U.currentTime) && (U.currentTime = U.now()); for (var g, k, l, m, n, o, p, r, v, w, b = "", e = new Date(U.currentTime.getFullYear(), U.currentTime.getMonth(), 1, 12, 0, 0), f = 0, h = U.now(), i = !1, j = !1, q = [], s = !0, t = "", u = ""; e.getDay() !== A.dayOfWeekStart;) e.setDate(e.getDate() - 1); for (b += "<table><thead><tr>", A.weeks && (b += "<th></th>"), g = 0; g < 7; g += 1) b += "<th>" + A.i18n[d].dayOfWeekShort[(g + A.dayOfWeekStart) % 7] + "</th>"; for (b += "</tr></thead>", b += "<tbody>", A.maxDate !== !1 && (i = U.strToDate(A.maxDate), i = new Date(i.getFullYear(), i.getMonth(), i.getDate(), 23, 59, 59, 999)), A.minDate !== !1 && (j = U.strToDate(A.minDate), j = new Date(j.getFullYear(), j.getMonth(), j.getDate())) ; f < U.currentTime.countDaysInMonth() || e.getDay() !== A.dayOfWeekStart || U.currentTime.getMonth() === e.getMonth() ;) q = [], f += 1, l = e.getDay(), m = e.getDate(), n = e.getFullYear(), o = e.getMonth(), p = U.getWeekOfYear(e), w = "", q.push("xdsoft_date"), r = A.beforeShowDay && a.isFunction(A.beforeShowDay.call) ? A.beforeShowDay.call(B, e) : null, i !== !1 && e > i || j !== !1 && e < j || r && r[0] === !1 ? q.push("xdsoft_disabled") : -1 !== A.disabledDates.indexOf(e.dateFormat(A.formatDate)) ? q.push("xdsoft_disabled") : -1 !== A.disabledWeekDays.indexOf(l) && q.push("xdsoft_disabled"), r && "" !== r[1] && q.push(r[1]), U.currentTime.getMonth() !== o && q.push("xdsoft_other_month"), (A.defaultSelect || B.data("changed")) && U.currentTime.dateFormat(A.formatDate) === e.dateFormat(A.formatDate) && q.push("xdsoft_current"), h.dateFormat(A.formatDate) === e.dateFormat(A.formatDate) && q.push("xdsoft_today"), (0 === e.getDay() || 6 === e.getDay() || -1 !== A.weekends.indexOf(e.dateFormat(A.formatDate))) && q.push("xdsoft_weekend"), void 0 !== A.highlightedDates[e.dateFormat(A.formatDate)] && (k = A.highlightedDates[e.dateFormat(A.formatDate)], q.push(void 0 === k.style ? "xdsoft_highlighted_default" : k.style), w = void 0 === k.desc ? "" : k.desc), A.beforeShowDay && a.isFunction(A.beforeShowDay) && q.push(A.beforeShowDay(e)), s && (b += "<tr>", s = !1, A.weeks && (b += "<th>" + p + "</th>")), b += '<td data-date="' + m + '" data-month="' + o + '" data-year="' + n + '" class="xdsoft_date xdsoft_day_of_week' + e.getDay() + " " + q.join(" ") + '" title="' + w + '"><div>' + m + "</div></td>", e.getDay() === A.dayOfWeekStartPrev && (b += "</tr>", s = !0), e.setDate(m + 1); if (b += "</tbody></table>", F.html(b), E.find(".xdsoft_label span").eq(0).text(A.i18n[d].months[U.currentTime.getMonth()]), E.find(".xdsoft_label span").eq(1).text(U.currentTime.getFullYear()), t = "", u = "", o = "", v = function (b, c) { var e, f, d = U.now(), g = A.allowTimes && a.isArray(A.allowTimes) && A.allowTimes.length; d.setHours(b), b = parseInt(d.getHours(), 10), d.setMinutes(c), c = parseInt(d.getMinutes(), 10), e = new Date(U.currentTime), e.setHours(b), e.setMinutes(c), q = [], (A.minDateTime !== !1 && A.minDateTime > e || A.maxTime !== !1 && U.strtotime(A.maxTime).getTime() < d.getTime() || A.minTime !== !1 && U.strtotime(A.minTime).getTime() > d.getTime()) && q.push("xdsoft_disabled"), (A.minDateTime !== !1 && A.minDateTime > e || A.disabledMinTime !== !1 && d.getTime() > U.strtotime(A.disabledMinTime).getTime() && A.disabledMaxTime !== !1 && d.getTime() < U.strtotime(A.disabledMaxTime).getTime()) && q.push("xdsoft_disabled"), f = new Date(U.currentTime), f.setHours(parseInt(U.currentTime.getHours(), 10)), g || f.setMinutes(Math[A.roundTime](U.currentTime.getMinutes() / A.step) * A.step), (A.initTime || A.defaultSelect || B.data("changed")) && f.getHours() === parseInt(b, 10) && (!g && A.step > 59 || f.getMinutes() === parseInt(c, 10)) && (A.defaultSelect || B.data("changed") ? q.push("xdsoft_current") : A.initTime && q.push("xdsoft_init_time")), parseInt(h.getHours(), 10) === parseInt(b, 10) && parseInt(h.getMinutes(), 10) === parseInt(c, 10) && q.push("xdsoft_today"), t += '<div class="xdsoft_time ' + q.join(" ") + '" data-hour="' + b + '" data-minute="' + c + '">' + d.dateFormat(A.formatTime) + "</div>" }, A.allowTimes && a.isArray(A.allowTimes) && A.allowTimes.length) for (f = 0; f < A.allowTimes.length; f += 1) u = U.strtotime(A.allowTimes[f]).getHours(), o = U.strtotime(A.allowTimes[f]).getMinutes(), v(u, o); else for (f = 0, g = 0; f < (A.hours12 ? 12 : 24) ; f += 1) for (g = 0; g < 60; g += A.step) u = (f < 10 ? "0" : "") + f, o = (g < 10 ? "0" : "") + g, v(u, o); for (I.html(t), c = "", f = 0, f = parseInt(A.yearStart, 10) + A.yearOffset; f <= parseInt(A.yearEnd, 10) + A.yearOffset; f += 1) c += '<div class="xdsoft_option ' + (U.currentTime.getFullYear() === f ? "xdsoft_current" : "") + '" data-value="' + f + '">' + f + "</div>"; for (L.children().eq(0).html(c), f = parseInt(A.monthStart, 10), c = ""; f <= parseInt(A.monthEnd, 10) ; f += 1) c += '<div class="xdsoft_option ' + (U.currentTime.getMonth() === f ? "xdsoft_current" : "") + '" data-value="' + f + '">' + A.i18n[d].months[f] + "</div>"; K.children().eq(0).html(c), a(B).trigger("generate.xdsoft") }, 10), b.stopPropagation() }).on("afterOpen.xdsoft", function () { if (A.timepicker) { var a, b, c, d; I.find(".xdsoft_current").length ? a = ".xdsoft_current" : I.find(".xdsoft_init_time").length && (a = ".xdsoft_init_time"), a ? (b = H[0].clientHeight, c = I[0].offsetHeight, d = I.find(a).index() * A.timeHeightInTimePicker + 1, c - b < d && (d = c - b), H.trigger("scroll_element.xdsoft_scroller", [parseInt(d, 10) / (c - b)])) : H.trigger("scroll_element.xdsoft_scroller", [0]) } }), P = 0, F.on("click.xdsoft", "td", function (c) { c.stopPropagation(), P += 1; var d = a(this), e = U.currentTime; return (void 0 === e || null === e) && (U.currentTime = U.now(), e = U.currentTime), d.hasClass("xdsoft_disabled") ? !1 : (e.setDate(1), e.setFullYear(d.data("year")), e.setMonth(d.data("month")), e.setDate(d.data("date")), B.trigger("select.xdsoft", [e]), b.val(U.str()), A.onSelectDate && a.isFunction(A.onSelectDate) && A.onSelectDate.call(B, U.currentTime, B.data("input"), c), B.data("changed", !0), B.trigger("xchange.xdsoft"), B.trigger("changedatetime.xdsoft"), (P > 1 || A.closeOnDateSelect === !0 || A.closeOnDateSelect === !1 && !A.timepicker) && !A.inline && B.trigger("close.xdsoft"), void setTimeout(function () { P = 0 }, 200)) }), I.on("click.xdsoft", "div", function (b) { b.stopPropagation(); var c = a(this), d = U.currentTime; return (void 0 === d || null === d) && (U.currentTime = U.now(), d = U.currentTime), c.hasClass("xdsoft_disabled") ? !1 : (d.setHours(c.data("hour")), d.setMinutes(c.data("minute")), B.trigger("select.xdsoft", [d]), B.data("input").val(U.str()), A.onSelectTime && a.isFunction(A.onSelectTime) && A.onSelectTime.call(B, U.currentTime, B.data("input"), b), B.data("changed", !0), B.trigger("xchange.xdsoft"), B.trigger("changedatetime.xdsoft"), void (A.inline !== !0 && A.closeOnTimeSelect === !0 && B.trigger("close.xdsoft"))) }), D.on("mousewheel.xdsoft", function (a) { return A.scrollMonth ? (a.deltaY < 0 ? U.nextMonth() : U.prevMonth(), !1) : !0 }), b.on("mousewheel.xdsoft", function (a) { return A.scrollInput ? !A.datepicker && A.timepicker ? (Q = I.find(".xdsoft_current").length ? I.find(".xdsoft_current").eq(0).index() : 0, Q + a.deltaY >= 0 && Q + a.deltaY < I.children().length && (Q += a.deltaY), I.children().eq(Q).length && I.children().eq(Q).trigger("mousedown"), !1) : A.datepicker && !A.timepicker ? (D.trigger(a, [a.deltaY, a.deltaX, a.deltaY]), b.val && b.val(U.str()), B.trigger("changedatetime.xdsoft"), !1) : void 0 : !0 }), B.on("changedatetime.xdsoft", function (b) { if (A.onChangeDateTime && a.isFunction(A.onChangeDateTime)) { var c = B.data("input"); A.onChangeDateTime.call(B, U.currentTime, c, b), delete A.value, c.trigger("change") } }).on("generate.xdsoft", function () { A.onGenerate && a.isFunction(A.onGenerate) && A.onGenerate.call(B, U.currentTime, B.data("input")), M && (B.trigger("afterOpen.xdsoft"), M = !1) }).on("click.xdsoft", function (a) { a.stopPropagation() }), Q = 0, R = function () { var f, b = B.data("input").offset(), c = b.top + B.data("input")[0].offsetHeight - 1, d = b.left, e = "absolute"; "rtl" == B.data("input").parent().css("direction") && (d -= B.outerWidth() - B.data("input").outerWidth()), A.fixed ? (c -= a(window).scrollTop(), d -= a(window).scrollLeft(), e = "fixed") : (c + B[0].offsetHeight > a(window).height() + a(window).scrollTop() && (c = b.top - B[0].offsetHeight + 1), c < 0 && (c = 0), d + B[0].offsetWidth > a(window).width() && (d = a(window).width() - B[0].offsetWidth)), f = B[0]; do if (f = f.parentNode, "relative" === window.getComputedStyle(f).getPropertyValue("position") && a(window).width() >= f.offsetWidth) { d -= (a(window).width() - f.offsetWidth) / 2; break } while ("HTML" !== f.nodeName); B.css({ left: d, top: c, position: e }) }, B.on("open.xdsoft", function (b) { var c = !0; A.onShow && a.isFunction(A.onShow) && (c = A.onShow.call(B, U.currentTime, B.data("input"), b)), c !== !1 && (B.show(), R(), a(window).off("resize.xdsoft", R).on("resize.xdsoft", R), A.closeOnWithoutClick && a([document.body, window]).on("mousedown.xdsoft", function d() { B.trigger("close.xdsoft"), a([document.body, window]).off("mousedown.xdsoft", d) })) }).on("close.xdsoft", function (b) { var c = !0; E.find(".xdsoft_month,.xdsoft_year").find(".xdsoft_select").hide(), A.onClose && a.isFunction(A.onClose) && (c = A.onClose.call(B, U.currentTime, B.data("input"), b)), c === !1 || A.opened || A.inline || B.hide(), b.stopPropagation() }).on("toggle.xdsoft", function () { B.trigger(B.is(":visible") ? "close.xdsoft" : "open.xdsoft") }).data("input", b), S = 0, T = 0, B.data("xdsoft_datetime", U), B.setOptions(A), U.setCurrentTime(V()), b.data("xdsoft_datetimepicker", B).on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function () { b.is(":disabled") || b.data("xdsoft_datetimepicker").is(":visible") && A.closeOnInputClick || (clearTimeout(S), S = setTimeout(function () { b.is(":disabled") || (M = !0, U.setCurrentTime(V()), B.trigger("open.xdsoft")) }, 100)) }).on("keydown.xdsoft", function (b) { var d, e = (this.value, b.which); return -1 !== [l].indexOf(e) && A.enterLikeTab ? (d = a("input:visible,textarea:visible"), B.trigger("close.xdsoft"), d.eq(d.index(this) + 1).focus(), !1) : -1 !== [s].indexOf(e) ? (B.trigger("close.xdsoft"), !0) : void 0 })
        }, D = function (b) { var c = b.data("xdsoft_datetimepicker"); c && (c.data("xdsoft_datetime", null), c.remove(), b.data("xdsoft_datetimepicker", null).off(".xdsoft"), a(window).off("resize.xdsoft"), a([window, document.body]).off("mousedown.xdsoft"), b.unmousewheel && b.unmousewheel()) }, a(document).off("keydown.xdsoftctrl keyup.xdsoftctrl").on("keydown.xdsoftctrl", function (a) { a.keyCode === j && (z = !0) }).on("keyup.xdsoftctrl", function (a) { a.keyCode === j && (z = !1) }), this.each(function () { var d, b = a(this).data("xdsoft_datetimepicker"); if (b) { if ("string" === a.type(c)) switch (c) { case "show": a(this).select().focus(), b.trigger("open.xdsoft"); break; case "hide": b.trigger("close.xdsoft"); break; case "toggle": b.trigger("toggle.xdsoft"); break; case "destroy": D(a(this)); break; case "reset": this.value = this.defaultValue, this.value && b.data("xdsoft_datetime").isValidDate(Date.parseDate(this.value, A.format)) || b.data("changed", !1), b.data("xdsoft_datetime").setCurrentTime(this.value); break; case "validate": d = b.data("input"), d.trigger("blur.xdsoft") } else b.setOptions(c); return 0 } "string" !== a.type(c) && (!A.lazyInit || A.open || A.inline ? C(a(this)) : E(a(this))) })
    }, a.fn.datetimepicker.defaults = b
}), function (a) { "function" === typeof define && define.amd ? define(["jquery"], a) : "object" === typeof exports ? module.exports = a : a(jQuery) }(function (a) { function i(b) { var c = b || window.event, g = d.call(arguments, 1), i = 0, l = 0, m = 0, n = 0, o = 0, p = 0; if (b = a.event.fix(c), b.type = "mousewheel", "detail" in c && (m = -1 * c.detail), "wheelDelta" in c && (m = c.wheelDelta), "wheelDeltaY" in c && (m = c.wheelDeltaY), "wheelDeltaX" in c && (l = -1 * c.wheelDeltaX), "axis" in c && c.axis === c.HORIZONTAL_AXIS && (l = -1 * m, m = 0), i = 0 === m ? l : m, "deltaY" in c && (m = -1 * c.deltaY, i = m), "deltaX" in c && (l = c.deltaX, 0 === m && (i = -1 * l)), 0 !== m || 0 !== l) { if (1 === c.deltaMode) { var q = a.data(this, "mousewheel-line-height"); i *= q, m *= q, l *= q } else if (2 === c.deltaMode) { var r = a.data(this, "mousewheel-page-height"); i *= r, m *= r, l *= r } if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || n < f) && (f = n, k(c, n) && (f /= 40)), k(c, n) && (i /= 40, l /= 40, m /= 40), i = Math[i >= 1 ? "floor" : "ceil"](i / f), l = Math[l >= 1 ? "floor" : "ceil"](l / f), m = Math[m >= 1 ? "floor" : "ceil"](m / f), h.settings.normalizeOffset && this.getBoundingClientRect) { var s = this.getBoundingClientRect(); o = b.clientX - s.left, p = b.clientY - s.top } return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, g.unshift(b, i, l, m), e && clearTimeout(e), e = setTimeout(j, 200), (a.event.dispatch || a.event.handle).apply(this, g) } } function j() { f = null } function k(a, b) { return h.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0 } var e, f, b = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"], c = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"], d = Array.prototype.slice; if (a.event.fixHooks) for (var g = b.length; g;) a.event.fixHooks[b[--g]] = a.event.mouseHooks; var h = a.event.special.mousewheel = { version: "3.1.12", setup: function () { if (this.addEventListener) for (var b = c.length; b;) this.addEventListener(c[--b], i, !1); else this.onmousewheel = i; a.data(this, "mousewheel-line-height", h.getLineHeight(this)), a.data(this, "mousewheel-page-height", h.getPageHeight(this)) }, teardown: function () { if (this.removeEventListener) for (var b = c.length; b;) this.removeEventListener(c[--b], i, !1); else this.onmousewheel = null; a.removeData(this, "mousewheel-line-height"), a.removeData(this, "mousewheel-page-height") }, getLineHeight: function (b) { var c = a(b), d = c["offsetParent" in a.fn ? "offsetParent" : "parent"](); return d.length || (d = a("body")), parseInt(d.css("fontSize"), 10) || parseInt(c.css("fontSize"), 10) || 16 }, getPageHeight: function (b) { return a(b).height() }, settings: { adjustOldDeltas: !0, normalizeOffset: !0 } }; a.fn.extend({ mousewheel: function (a) { return a ? this.bind("mousewheel", a) : this.trigger("mousewheel") }, unmousewheel: function (a) { return this.unbind("mousewheel", a) } }) }), !function (a) { "function" === typeof define && define.amd ? define([], a) : "object" === typeof exports ? module.exports = a : a() }(function () { "use strict"; function e(a) { for (var b = [], e = !1, g = "", h = 0; h < a.length; ++h) g = a.charAt(h), e || "\\" !== g ? e ? (e = !1, b.push(j(g))) : b.push(d[g] || j(g)) : e = !0; c[a] = f(b) } function f(a) { return function (b) { for (var c = [], d = 0, e = a.length; d < e; d++) c.push("string" === typeof a[d] ? a[d] : a[d](b)); return c.join("") } } function g(a, c, d) { return function (a) { var e = new Date, f = a.match(b[c]); if (f && f.length > 0) { f.y = e.getFullYear(), f.m = e.getMonth(), f.d = e.getDate(), f.h = -1, f.i = -1, f.s = -1; for (var g = 0, h = d.length; g < h; g++) d[g](f); if (f.y > 0 && f.m >= 0 && f.d > 0 && f.h >= 0 && f.i >= 0 && f.s >= 0) return new Date(f.y, f.m, f.d, f.h, f.i, f.s); if (f.y > 0 && f.m >= 0 && f.d > 0 && f.h >= 0 && f.i >= 0) return new Date(f.y, f.m, f.d, f.h, f.i); if (f.y > 0 && f.m >= 0 && f.d > 0 && f.h >= 0) return new Date(f.y, f.m, f.d, f.h); if (f.y > 0 && f.m >= 0 && f.d > 0) return new Date(f.y, f.m, f.d); if (f.y > 0 && f.m >= 0) return new Date(f.y, f.m); if (f.y > 0) return new Date(f.y) } return null } } function h(c) { for (var m, d = b.length, e = 1, f = "", h = !1, k = "", l = [], n = 0; n < c.length; ++n) k = c.charAt(n), h || "\\" !== k ? h ? (h = !1, f += j(k)) : (m = i(k, e), e += m.g, f += m.s, m.g && m.a && l.push(m.a)) : h = !0; b[d] = new RegExp("^" + f + "$"), a[c] = g(c, d, l) } function i(a, b) { switch (a) { case "D": return { g: 0, s: "(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)" }; case "j": case "d": return { g: 1, a: function (a) { a.d = parseInt(a[b], 10) }, s: "(\\d{1,2})" }; case "l": return { g: 0, s: "(?:" + Date.dayNames.join("|") + ")" }; case "S": return { g: 0, s: "(?:st|nd|rd|th)" }; case "w": return { g: 0, s: "\\d" }; case "z": return { g: 0, s: "(?:\\d{1,3})" }; case "W": return { g: 0, s: "(?:\\d{2})" }; case "F": return { g: 1, a: function (a) { a.m = parseInt(Date.monthNumbers[a[b].substring(0, 3)], 10) }, s: "(" + Date.monthNames.join("|") + ")" }; case "M": return { g: 1, a: function (a) { a.m = parseInt(Date.monthNumbers[a[b]], 10) }, s: "(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)" }; case "n": case "m": return { g: 1, a: function (a) { a.m = parseInt(a[b], 10) - 1 }, s: "(\\d{1,2})" }; case "t": return { g: 0, s: "\\d{1,2}" }; case "L": return { g: 0, s: "(?:1|0)" }; case "Y": return { g: 1, a: function (a) { a.y = parseInt(a[b], 10) }, s: "(\\d{4})" }; case "y": return { g: 1, a: function (a) { var c = parseInt(a[b], 10); a.y = c > Date.y2kYear ? 1900 + c : 2e3 + c }, s: "(\\d{1,2})" }; case "a": return { g: 1, a: function (a) { "am" === a[b] ? 12 == a.h && (a.h = 0) : a.h < 12 && (a.h += 12) }, s: "(am|pm)" }; case "A": return { g: 1, a: function (a) { "AM" === a[b] ? 12 == a.h && (a.h = 0) : a.h < 12 && (a.h += 12) }, s: "(AM|PM)" }; case "g": case "G": case "h": case "H": return { g: 1, a: function (a) { a.h = parseInt(a[b], 10) }, s: "(\\d{1,2})" }; case "i": return { g: 1, a: function (a) { a.i = parseInt(a[b], 10) }, s: "(\\d{2})" }; case "s": return { g: 1, a: function (a) { a.s = parseInt(a[b], 10) }, s: "(\\d{2})" }; case "O": return { g: 0, s: "[+-]\\d{4}" }; case "T": return { g: 0, s: "[A-Z]{3}" }; case "Z": return { g: 0, s: "[+-]\\d{1,5}" }; default: return { g: 0, s: j(a) } } } function j(a) { return a.replace(/('|\\)/g, "\\$1") } function k(a, b, c) { var d = "" + a; for (c = "" + c || " "; d.length < b;) d = c + d; return d } var a = {}, b = [], c = {}, d = { d: function (a) { return k(a.getDate(), 2, "0") }, D: function (a) { return Date.dayNames[a.getDay()].substring(0, 3) }, j: function (a) { return a.getDate() }, l: function (a) { return Date.dayNames[a.getDay()] }, S: function (a) { return a.getSuffix() }, w: function (a) { return a.getDay() }, z: function (a) { return a.getDayOfYear() }, W: function (a) { return a.getWeekOfYear() }, F: function (a) { return Date.monthNames[a.getMonth()] }, m: function (a) { return k(a.getMonth() + 1, 2, "0") }, M: function (a) { return Date.monthNames[a.getMonth()].substring(0, 3) }, n: function (a) { return a.getMonth() + 1 }, t: function (a) { return a.getDaysInMonth() }, L: function (a) { return a.isLeapYear() ? 1 : 0 }, Y: function (a) { return a.getFullYear() }, y: function (a) { return ("" + a.getFullYear()).substring(2, 4) }, a: function (a) { return a.getHours() < 12 ? "am" : "pm" }, A: function (a) { return a.getHours() < 12 ? "AM" : "PM" }, g: function (a) { return a.getHours() % 12 ? a.getHours() % 12 : 12 }, G: function (a) { return a.getHours() }, h: function (a) { return k(a.getHours() % 12 ? a.getHours() % 12 : 12, 2, "0") }, H: function (a) { return k(a.getHours(), 2, "0") }, i: function (a) { return k(a.getMinutes(), 2, "0") }, s: function (a) { return k(a.getSeconds(), 2, "0") }, O: function (a) { return a.getGMTOffset() }, T: function (a) { return a.getTimezone() }, Z: function (a) { return -60 * a.getTimezoneOffset() } }; Date.prototype.dateFormat = function (a) { return c[a] || e(a), c[a](this) }, Date.parseDate = function (b, c) { return a[c] || h(c), a[c](b) }, Date.prototype.getTimezone = function () { return this.toString().replace(/^.*? ([A-Z]{3}) [0-9]{4}.*$/, "$1").replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, "$1$2$3") }, Date.prototype.getGMTOffset = function () { return (this.getTimezoneOffset() > 0 ? "-" : "+") + k(Math.floor(this.getTimezoneOffset() / 60), 2, "0") + k(this.getTimezoneOffset() % 60, 2, "0") }, Date.prototype.getDayOfYear = function () { var a = 0; Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28; for (var b = 0; b < this.getMonth() ; ++b) a += Date.daysInMonth[b]; return a + this.getDate() - 1 }, Date.prototype.getWeekOfYear = function () { var a = this.getDayOfYear() + (4 - this.getDay()), b = new Date(this.getFullYear(), 0, 1), c = 7 - b.getDay() + 4; return k((a - c) / 7 + 1, 2, "0") }, Date.prototype.isLeapYear = function () { var a = this.getFullYear(); return !(0 !== (3 & a) || !(a % 100 || a % 400 === 0 && a)) }, Date.prototype.getFirstDayOfMonth = function () { var a = (this.getDay() - (this.getDate() - 1)) % 7; return a < 0 ? a + 7 : a }, Date.prototype.getLastDayOfMonth = function () { var a = (this.getDay() + (Date.daysInMonth[this.getMonth()] - this.getDate())) % 7; return a < 0 ? a + 7 : a }, Date.prototype.getDaysInMonth = function () { return Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28, Date.daysInMonth[this.getMonth()] }, Date.prototype.getSuffix = function () { switch (this.getDate()) { case 1: case 21: case 31: return "st"; case 2: case 22: return "nd"; case 3: case 23: return "rd"; default: return "th" } }, Date.daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Date.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], Date.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], Date.y2kYear = 50, Date.monthNumbers = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 }, Date.patterns = { ISO8601LongPattern: "Y-m-d H:i:s", ISO8601ShortPattern: "Y-m-d", ShortDatePattern: "n/j/Y", LongDatePattern: "l, F d, Y", FullDateTimePattern: "l, F d, Y g:i:s A", MonthDayPattern: "F d", ShortTimePattern: "g:i A", LongTimePattern: "g:i:s A", SortableDateTimePattern: "Y-m-d\\TH:i:s", UniversalSortableDateTimePattern: "Y-m-d H:i:sO", YearMonthPattern: "F, Y" } });